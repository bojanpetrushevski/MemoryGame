<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="errorProvider.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        ABIAAAA+AAAAVwAAAG0AAABtAAAAVwAAAD4AAAASAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAA
        AF4AAACmAAAA2AAAAOYAAADpAAAA7QAAAO0AAADpAAAA5gAAANgAAACnAAAAXwAAABsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwAA
        AGAAAAC1AAAA4gAAAPAAAADqAAAAvAAAAKIAAACNAAAAjQAAAKIAAAC9AAAA6gAAAPAAAADiAAAAtQAA
        AGAAAAAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AC4AAACNAAAA2QAAAOkAAADBAAAAcwAAAEMAAAAuAAAAJQAAAB4AAAAeAAAAJQAAAC4AAABDAAAAcwAA
        AMIAAADpAAAA2QAAAI0AAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA+AAAAoAAAAOUAAADPAAAAfAAAADoAAAAWAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAWAAAAOwAAAH0AAADQAAAA5QAAAKAAAAA+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        +A/4B+Af/AAAP/4AAH//gAH//+AH//////8=
</value>
  </data>
</root>